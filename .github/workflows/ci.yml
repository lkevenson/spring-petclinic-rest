name: Java CI for Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B verify

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Unit Test
        run: ./mvnw test

  sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: test
    steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: 'zulu' # Alternative distribution options are available.
        - name: Cache SonarQube packages
          uses: actions/cache@v4
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
#        - name: Cache Maven packages
#          uses: actions/cache@v4
#          with:
#            path: ~/.m2
#            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          run: |
#            mvn -B clean verify \
#                org.jacoco:jacoco-maven-plugin:prepare-agent \
#                sonar:sonar \
#                -Dsonar.projectKey=lkevenson_spring-petclinic-rest \
#                -Dsonar.organization=lkevenson \
#                -Dsonar.host.url=https://sonarcloud.io \
#                -Dsonar.sources=src/main/java \
#                -Dsonar.tests=src/test/java \
#                -Dsonar.java.binaries=target/classes \
#                -Dsonar.java.libraries=target/*.jar \
#                -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          run: |
            ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.projectKey=lkevenson_spring-petclinic-rest \
              -Dsonar.coverage.jacoco.xmlReportPaths= \
               target/site/jacoco/jacoco.xml \
               org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage
#          run:
#            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lkevenson_spring-petclinic-rest

#    name: Analyze with SonarQube
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#          distribution: 'temurin'
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          mvn -B verify org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage
#          mvn -B sonar:sonar \
#              -Dsonar.projectKey=lkevenson_spring-petclinic-rest \
#              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
