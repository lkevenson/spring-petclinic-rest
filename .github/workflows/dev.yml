name: Deploy to Minikube (Dev)

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04
    steps:
      # ðŸ”¹ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ”¹ Start Minikube (instead of Azure login)
      - name: Start Minikube
        run: |
          minikube start
          minikube docker-env | source
          kubectl config use-context minikube

      # ðŸ”¹ Build Docker image (using Minikube's Docker daemon)
      - name: Build Docker image
        run: |
          docker build -t petclinic-rest:dev .

      # ðŸ”¹ Load image into Minikube (instead of pushing to ACR)
      - name: Load image into Minikube
        run: |
          minikube image load petclinic-rest:dev

      # Deploy MySQL (dev version)
      - name: Deploy MySQL (Dev)
        run: |
          kubectl apply -f k8s/dev/mysql/deployment.yaml
          kubectl apply -f k8s/dev/mysql/service.yaml
          kubectl rollout status deployment/petclinic-mysql --timeout=180s

      # Wait for MySQL to be ready
      - name: Wait for MySQL
        run: |
          kubectl wait --for=condition=ready pod -l app=petclinic-mysql --timeout=300s

      # Deploy PetClinic application (dev version)
      - name: Deploy PetClinic (Dev)
        run: |
          kubectl apply -f k8s/dev/deployment.yaml
          kubectl rollout status deployment/petclinic-rest

      # Expose PetClinic service (dev version)
      - name: Deploy PetClinic Service (Dev)
        run: |
          kubectl apply -f k8s/dev/service.yaml
          minikube service petclinic-rest --url
