name: Deploy to Minikube (Dev)

on:
  push:
    branches: [dev]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Start Minikube
      - name: Start Minikube
        run: |
          minikube start
          minikube docker-env | source
          kubectl config use-context minikube

      # Run tests
      - name: Run tests
        run: |
          ./mvnw clean test
          ./mvnw verify -Pintegration-test
          ./mvnw jacoco:report
          mkdir -p test-results
          cp target/surefire-reports/*.xml test-results/

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t petclinic-rest:dev .

      # Load image into Minikube
      - name: Load image into Minikube
        run: |
          minikube image load petclinic-rest:dev

      # Deploy MySQL (dev version)
      - name: Deploy MySQL (Dev)
        run: |
          kubectl apply -f k8s/dev/mysql/deployment.yaml
          kubectl apply -f k8s/dev/mysql/service.yaml
          kubectl rollout status deployment/petclinic-mysql --timeout=180s
          kubectl wait --for=condition=ready pod -l app=petclinic-mysql --timeout=300s

      # Deploy application
      - name: Deploy PetClinic (Dev)
        run: |
          kubectl apply -f k8s/dev/deployment.yaml
          kubectl rollout status deployment/petclinic-rest --timeout=180s

      # Expose service and get URL
      - name: Get application URL
        run: |
          kubectl apply -f k8s/dev/service.yaml
          echo "Application deployed at:"
          minikube service petclinic-rest --url | tee service-url.txt
          echo "::set-output name=service_url::$(cat service-url.txt)"

      # Upload test results (optional)
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results/
